{"version":3,"sources":["../src/index.ts"],"sourcesContent":["// Webchat Crussader ‚Äî Widget conectado a backend (site + session + messages + bootstrap)\r\nexport {};\r\n\r\ndeclare global {\r\n  interface Window {\r\n    crussaderChat?: (...args: any[]) => void;\r\n    __crussaderChatLoaded?: boolean;\r\n    __CRUSSADER_API_BASE__?: string; // opcional si sirves el API en otro dominio\r\n  }\r\n}\r\n\r\n(() => {\r\n  if (typeof window === \"undefined\") return;\r\n  if (window.__crussaderChatLoaded) return;\r\n  window.__crussaderChatLoaded = true;\r\n\r\n  const queue: any[] = [];\r\n  window.crussaderChat = (...args: any[]) => queue.push(args);\r\n\r\n  // ===== Helpers =====\r\n  function ready(fn: () => void) {\r\n    if (document.readyState === \"complete\" || document.readyState === \"interactive\") setTimeout(fn, 0);\r\n    else document.addEventListener(\"DOMContentLoaded\", fn);\r\n  }\r\n\r\n  function apiBase(path: string) {\r\n    const base = window.__CRUSSADER_API_BASE__ || \"\";\r\n    return base + path;\r\n  }\r\n\r\n  ready(() => {\r\n    // === 0) Script & key ===\r\n    const currentScript =\r\n      document.currentScript ||\r\n      document.querySelector<HTMLScriptElement>('script[src*=\"wc.js\"]');\r\n    const publicKey = currentScript?.getAttribute(\"data-key\") || \"demo-public-key-123\"; // <-- usa tu key real\r\n\r\n    // === Estado local del widget ===\r\n    let siteId: string | null = null;\r\n    let sessionId: string | null = null;\r\n\r\n    // === API ===\r\n    const API = {\r\n      async bootstrap(key: string) {\r\n        const r = await fetch(apiBase(`/api/webchat/bootstrap?key=${encodeURIComponent(key)}`));\r\n        if (!r.ok) throw new Error(\"bootstrap error\");\r\n        return r.json() as Promise<{\r\n          ok: boolean;\r\n          allowPrivate: boolean;\r\n          site: { id: string; settings?: any; name?: string };\r\n          user: { id: string; name: string | null; email: string | null } | null;\r\n          company: { name: string | null; plan: string | null } | null;\r\n          counts: { locations: number } | null;\r\n          billing?: { hasStripe?: boolean } | null;\r\n          responseSettings: { configured: boolean; updatedAt?: string | null } | null;\r\n          debug?: any;\r\n        }>;\r\n      },\r\n      sessionLSKey(key: string) {\r\n        return `crussader:webchat:session:${key}`;\r\n      },\r\n      readSessionFromLS(key: string) {\r\n        try {\r\n          return JSON.parse(localStorage.getItem(API.sessionLSKey(key)) || \"null\");\r\n        } catch {\r\n          return null;\r\n        }\r\n      },\r\n      writeSessionToLS(key: string, value: any) {\r\n        try {\r\n          localStorage.setItem(API.sessionLSKey(key), JSON.stringify(value));\r\n        } catch {}\r\n      },\r\n      async ensureSessionByKey(key: string) {\r\n        const existing = API.readSessionFromLS(key);\r\n        let visitorId = existing?.visitorId || (crypto?.randomUUID?.() ?? String(Date.now()));\r\n        if (existing?.sessionId && existing?.siteId) {\r\n          siteId = existing.siteId;\r\n          sessionId = existing.sessionId;\r\n          return { siteId: existing.siteId, sessionId: existing.sessionId };\r\n        }\r\n        const r = await fetch(apiBase(`/api/webchat/sessions`), {\r\n          method: \"POST\",\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n          body: JSON.stringify({\r\n            key,\r\n            visitorId,\r\n            meta: { ua: navigator.userAgent, lang: navigator.language, ref: document.referrer },\r\n          }),\r\n        });\r\n        const j = await r.json();\r\n        if (!r.ok) throw new Error(j?.error || \"session error\");\r\n        API.writeSessionToLS(key, { visitorId, sessionId: j.sessionId, siteId: j.siteId });\r\n        siteId = j.siteId;\r\n        sessionId = j.sessionId;\r\n        return { siteId, sessionId };\r\n      },\r\n      async sendUserMessage(text: string) {\r\n        if (!siteId || !sessionId) throw new Error(\"No session\");\r\n        const r = await fetch(apiBase(`/api/webchat/messages`), {\r\n          method: \"POST\",\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n          body: JSON.stringify({ siteId, sessionId, role: \"USER\", text }),\r\n        });\r\n        const j = await r.json();\r\n        if (!r.ok) throw new Error(j?.error || \"send error\");\r\n        return j as { ok: true; messageId: string; botMessage?: { text: string } };\r\n      },\r\n    };\r\n\r\n    // === 1) Host + Shadow DOM + UI ===\r\n    const host = document.createElement(\"div\");\r\n    host.id = \"crussader-chat-host\";\r\n    host.style.position = \"fixed\";\r\n    host.style.zIndex = \"2147483647\";\r\n    host.style.bottom = \"20px\";\r\n    host.style.right = \"20px\";\r\n    document.body.appendChild(host);\r\n\r\n    const shadow = host.attachShadow({ mode: \"open\" });\r\n\r\n    const color = \"#7c3aed\";\r\n    const style = document.createElement(\"style\");\r\n    style.textContent = `\r\n      :host { all: initial; }\r\n      .btn { width:56px; height:56px; border-radius:9999px; display:grid; place-items:center; background:${color};\r\n             color:#fff; border:none; box-shadow:0 8px 24px rgba(0,0,0,.18); cursor:pointer; }\r\n      .panel { position:fixed; right:0; bottom:86px; width:min(360px,90vw); height:520px; background:#fff;\r\n               border-radius:16px; box-shadow:0 16px 48px rgba(0,0,0,.16); border:1px solid rgba(0,0,0,.06);\r\n               display:none; overflow:hidden; }\r\n      .header { height:56px; background:${color}; color:#fff; display:flex; align-items:center; justify-content:space-between; padding:0 14px; font:600 14px system-ui,sans-serif; }\r\n      .body { display:flex; flex-direction:column; height:calc(100% - 56px); background:#fafafa; }\r\n      .msgs { flex:1; overflow:auto; padding:12px; font:14px/1.4 system-ui,sans-serif; color:#111; }\r\n      .row { margin:8px 0; display:flex; }\r\n      .row.user { justify-content:flex-end; }\r\n      .bubble { max-width:80%; padding:10px 12px; border-radius:12px; border:1px solid #e5e7eb; background:#fff; white-space:pre-wrap; }\r\n      .row.user .bubble { background:#eef2ff; }\r\n      .input { display:flex; gap:8px; padding:10px; background:#fff; border-top:1px solid #eee; }\r\n      .input input { flex:1; border:1px solid #e5e7eb; border-radius:10px; padding:10px; font:14px system-ui,sans-serif; }\r\n      .input button { background:${color}; color:#fff; border:none; padding:10px 14px; border-radius:10px; cursor:pointer; }\r\n      .close { background:rgba(255,255,255,.2); color:#fff; border:none; padding:6px 10px; border-radius:8px; cursor:pointer; }\r\n    `;\r\n    shadow.appendChild(style);\r\n\r\n    const btn = document.createElement(\"button\");\r\n    btn.className = \"btn\";\r\n    btn.setAttribute(\"aria-label\", \"Abrir chat\");\r\n    btn.innerHTML = `<svg width=\"22\" height=\"22\" viewBox=\"0 0 24 24\" fill=\"none\" aria-hidden=\"true\">\r\n      <path d=\"M21 12c0 4.418-4.03 8-9 8-1.003 0-1.966-.146-2.86-.416L3 20l1.52-4.28C4.191 14.79 4 13.915 4 13c0-4.418 4.03-8 9-8s9 3.582 9 7z\"\r\n        stroke=\"white\" stroke-width=\"1.5\" fill=\"none\"/></svg>`;\r\n    shadow.appendChild(btn);\r\n\r\n    const panel = document.createElement(\"div\");\r\n    panel.className = \"panel\";\r\n    panel.innerHTML = `\r\n      <div class=\"header\">\r\n        <div>Chat con Crussader</div>\r\n        <button class=\"close\">Cerrar</button>\r\n      </div>\r\n      <div class=\"body\">\r\n        <div class=\"msgs\" id=\"msgs\"></div>\r\n        <div class=\"input\">\r\n          <input id=\"msgInput\" placeholder=\"Escribe tu mensaje...\" />\r\n          <button id=\"sendBtn\">Enviar</button>\r\n        </div>\r\n      </div>\r\n    `;\r\n    shadow.appendChild(panel);\r\n\r\n    const msgs = panel.querySelector(\"#msgs\") as HTMLDivElement;\r\n    const input = panel.querySelector(\"#msgInput\") as HTMLInputElement;\r\n    const send = panel.querySelector(\"#sendBtn\") as HTMLButtonElement;\r\n    const close = panel.querySelector(\".close\") as HTMLButtonElement;\r\n\r\n    let isOpen = false;\r\n    function open() { if (!isOpen) { panel.style.display = \"block\"; isOpen = true; } }\r\n    function closePanel() { if (isOpen) { panel.style.display = \"none\"; isOpen = false; } }\r\n\r\n    function addMsg(role: \"user\" | \"bot\", text: string) {\r\n      const row = document.createElement(\"div\");\r\n      row.className = \"row \" + role;\r\n      const bubble = document.createElement(\"div\");\r\n      bubble.className = \"bubble\";\r\n      bubble.textContent = text;\r\n      row.appendChild(bubble);\r\n      msgs.appendChild(row);\r\n      msgs.scrollTop = msgs.scrollHeight;\r\n    }\r\n\r\n    btn.addEventListener(\"click\", () => (isOpen ? closePanel() : open()));\r\n    close.addEventListener(\"click\", closePanel);\r\n\r\n    // === 2) Inicializaci√≥n: bootstrap + asegura sesi√≥n ===\r\n    (async () => {\r\n      try {\r\n        const boot = await API.bootstrap(publicKey);\r\n        siteId = boot.site.id;\r\n\r\n        await API.ensureSessionByKey(publicKey);\r\n\r\n        // Saludo:\r\n        if (boot.allowPrivate && boot.user) {\r\n          // Panel (usuario logado y perteneciente a la misma company)\r\n          const name = boot.user.name || boot.user.email || \"usuario\";\r\n          const plan = boot.company?.plan ?? \"free\";\r\n          const locs = boot.counts?.locations ?? 0;\r\n          const rs = boot.responseSettings?.configured ? \"‚úÖ voz de marca configurada\" : \"‚ö†Ô∏è voz de marca sin configurar\";\r\n          open();\r\n          addMsg(\"bot\", `¬°Hola ${name}! üëã`);\r\n          addMsg(\"bot\", `Est√°s en ${boot.company?.name ?? \"tu empresa\"} ¬∑ plan: ${plan} ¬∑ ubicaciones: ${locs} ¬∑ ${rs}.`);\r\n          addMsg(\"bot\", `¬øEn qu√© te ayudo? Puedo guiarte para configurar el webchat o tus respuestas.`);\r\n        } else {\r\n          // Landing (an√≥nimo)\r\n          const greeting = boot.site?.settings?.greeting as string | undefined;\r\n          if (greeting) { open(); addMsg(\"bot\", greeting); }\r\n        }\r\n      } catch (err) {\r\n        console.error(\"[webchat] init error:\", err);\r\n      }\r\n    })();\r\n\r\n    // === 3) Env√≠o de mensajes ===\r\n    async function handleSend() {\r\n      const v = (input.value || \"\").trim();\r\n      if (!v) return;\r\n      addMsg(\"user\", v);\r\n      input.value = \"\";\r\n      try {\r\n        const res = await API.sendUserMessage(v);\r\n        if (res?.botMessage?.text) addMsg(\"bot\", res.botMessage.text);\r\n      } catch (err) {\r\n        console.error(\"[webchat] send error:\", err);\r\n        addMsg(\"bot\", \"‚ö†Ô∏è No he podido enviar tu mensaje ahora mismo.\");\r\n      }\r\n    }\r\n\r\n    send.addEventListener(\"click\", handleSend);\r\n    input.addEventListener(\"keydown\", (e) => { if (e.key === \"Enter\") handleSend(); });\r\n\r\n    // === 4) API p√∫blica simple ===\r\n    function publicApi(cmd: string, payload?: any) {\r\n      switch (cmd) {\r\n        case \"open\": open(); break;\r\n        case \"close\": closePanel(); break;\r\n        case \"identify\":\r\n          // MVP: solo mostrar; (si quieres, puedes enviarlo al backend como payload)\r\n          addMsg(\"bot\", \"‚úÖ Usuario: \" + JSON.stringify(payload));\r\n          break;\r\n        case \"message\":\r\n          if (payload?.text) addMsg(payload.role === \"user\" ? \"user\" : \"bot\", payload.text);\r\n          break;\r\n        default:\r\n          console.warn(\"[crussaderChat] comando desconocido:\", cmd);\r\n      }\r\n    }\r\n\r\n    queue.forEach((args) => publicApi(args[0], args[1]));\r\n    window.crussaderChat = publicApi;\r\n\r\n    console.info(\"[crussaderChat] Widget cargado\");\r\n  });\r\n})();\r\n"],"mappings":"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","names":["index_exports","queue","args","ready","fn","apiBase","path","publicKey","siteId","sessionId","API","key","r","value","existing","visitorId","j","text","host","shadow","color","style","btn","panel","msgs","input","send","close","isOpen","open","closePanel","addMsg","role","row","bubble","boot","name","plan","locs","rs","greeting","err","handleSend","v","res","publicApi","cmd","payload"]}